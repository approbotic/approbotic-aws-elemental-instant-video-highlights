{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Resources": {
        "EMLPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "medialive:*"
                            ],
                            "Resource": "*"
                        }
                    ]
                },
                "PolicyName": "ParsePolicy",
                "Roles": [
                    {
                        "Ref": "ParseLambdaRole"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "a617c152-8ce7-420d-891f-bdc96526db80"
                }
            }
        },
        "ParseLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AdministratorAccess",
                    "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess",
                    "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
                    "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                    "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess",
                    "arn:aws:iam::aws:policy/AWSXrayFullAccess",
                    "arn:aws:iam::aws:policy/AmazonRekognitionFullAccess"
                ],
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/"
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "3f289d64-d349-437a-92ed-a13be48c09d0"
                }
            }
        },
        "Parse": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Fn::Join": [
                            "-",
                            [
                                "rodeolabz",
                                {
                                    "Ref": "AWS::Region"
                                }
                            ]
                        ]
                    },
                    "S3Key": "cf5k/cf5k_resources.zip"
                },
                "Environment": {
                    "Variables": {
                        "DYNAMO_MAIN": {
                            "Ref": "MainTable"
                        },
                        "DYNAMO_SUMMARY": {
                            "Ref": "SummaryTable"
                        },
                        "DYNAMO_LIST": {
                            "Ref": "ListTable"
                        },
                        "CHANNEL_NAME": {
                            "Ref": "MediaLiveChannelName"
                        },
                        "ENABLE_PREKOG": {
                            "Ref": "EnablePrekog"
                        },
                        "REKOG_LABEL": {
                            "Ref": "RekogLabel"
                        },
                        "LAMBDA_PREKOG": {
                            "Ref": "PrekogLambda"
                        }
                    }
                },
                "Handler": "parse.lambda_handler",
                "MemorySize": 512,
                "Role": {
                    "Fn::GetAtt": [
                        "ParseLambdaRole",
                        "Arn"
                    ]
                },
                "Runtime": "python2.7",
                "Timeout": 300
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "3ab280fb-5cbe-48ff-9936-475aa3587a8d"
                }
            }
        },
        "ParseLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "Parse",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "s3.amazonaws.com",
                "SourceAccount": {
                    "Ref": "AWS::AccountId"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "b8139580-1ba1-4081-84e8-04c7ff902bbe"
                }
            }
        }
    },
    "Description": "This template creates the resources needed for parsing the MediaLive output",
    "Metadata": {
        "AWS::CloudFormation::Designer": {
            "3ab280fb-5cbe-48ff-9936-475aa3587a8d": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -90,
                    "y": 240
                },
                "z": 0,
                "embeds": []
            },
            "3f289d64-d349-437a-92ed-a13be48c09d0": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -240,
                    "y": 240
                },
                "z": 0,
                "embeds": []
            },
            "a617c152-8ce7-420d-891f-bdc96526db80": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -240,
                    "y": 90
                },
                "z": 0,
                "embeds": [],
                "isassociatedwith": [
                    "3f289d64-d349-437a-92ed-a13be48c09d0"
                ]
            },
            "b8139580-1ba1-4081-84e8-04c7ff902bbe": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -90,
                    "y": 90
                },
                "z": 0,
                "embeds": [],
                "isassociatedwith": [
                    "3ab280fb-5cbe-48ff-9936-475aa3587a8d"
                ]
            }
        }
    },
    "Outputs": {
        "ParseLambdaARN": {
            "Value": {
                "Fn::GetAtt": [
                    "Parse",
                    "Arn"
                ]
            },
            "Description": "ParseLambdaARN"
        }
    },
    "Parameters": {
        "MediaLiveChannelName": {
            "Description": "MediaLive Channel Name",
            "Type": "String"
        },
        "MainTable": {
            "Description": "Main Table",
            "Type": "String"
        },
        "SummaryTable": {
            "Description": "Summary Table",
            "Type": "String"
        },
        "ListTable": {
            "Description": "List Table",
            "Type": "String"
        },
        "EnablePrekog": {
            "Description": "Indicates whether a label is to be matched",
            "Default": "false",
            "Type": "String"
        },
        "RekogLabel": {
            "Description": "If Prekog enabled, this is the label to search for (eg. Cat)",
            "Type": "String"
        },
        "PrekogLambda": {
            "Description": "The name of the function that determines where in the video stream the RekogLabel is found",
            "Type": "String"
        }
    }
}